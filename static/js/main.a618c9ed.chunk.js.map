{"version":3,"sources":["reducers/todos.js","contexts/TodoCtxProvider.jsx","components/TodoHead.jsx","components/TodoDate.jsx","custom_hooks/useInputs.js","components/TodoInsert.jsx","components/TodoEdit.jsx","components/TodoBody.jsx","components/TodoItem.jsx","components/TodoList.jsx","components/TodoFooter.jsx","containers/TodoContainer.jsx","App.js","serviceWorker.js","index.js"],"names":["sort","show","type","initialState","todos","id","tit","done","nextCommentIdx","comment","idx","cont","reducer","state","action","console","log","concat","nextId","filter","todo","map","Error","CtxState","createContext","CtxDispatch","CtxNextId","useCtxSate","useCtxDispatch","TodoCtxProvider","children","useReducer","dispatch","useRef","Provider","value","Header","styled","header","React","memo","TodoDateBlock","div","ToDate","h1","Today","p","Year","span","MonthTimeBlock","Month","Time","time","Ampm","TodoLen","h2","TodoDate","props","today","Date","date","getDate","year","toLocaleDateString","month","useState","getHours","ampm","setAmpm","fnZero","useCallback","sec","substr","hour","min","getMinutes","getSeconds","setTime","useEffect","setTimeout","now","useContext","todoLen","useMemo","length","className","useInputs","initialData","inputs","setInputs","fnChange","e","target","fnReset","TodoInsertBlock","form","InputBox","input","BtnAdd","button","TodoInsert","$input","onSubmit","preventDefault","create","current","focus","ref","onChange","TodoEditBlock","TodoEdit","TodoBodyBlock","section","TodoBody","TodoItemBlock","li","Span","ChkBox","Title","h3","Edit","Delete","TodoItem","onClick","finish","remove","TodoListBlock","ul","TodoList","fnSelForm","key","TodoFooterBlock","footer","Button","BtnAll","css","BtnComplete","BtnInComplete","TodoFooter","setShow","TodoContainerBlock","CreateGlobalStyle","createGlobalStyle","TodoContainer","selectForm","setSelectForm","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a618c9ed.chunk.js","sourcesContent":["import produce from 'immer'\n\n//액션타입변수\nconst CREATE = 'todos/CREATE'\nconst REMOVE = 'todos/REMOVE'\nconst FINISH = 'todos/FINISH'\nconst SORT = 'todos/SORT'\nconst EDIT = 'todos/EDIT'\n\n//액션생성함수\nexport const create = (tit, nextId) => ({ type: CREATE, tit, nextId })\nexport const remove = id => ({ type: REMOVE, id })\nexport const finish = id => ({ type: FINISH, id })\nexport const sort = show => ({ type: SORT, show })\nexport const edit = (id, tit) => ({ type: EDIT, id, tit })\n\n//초기값\nexport const initialState = {\n\ttodos: [\n\t\t{\n\t\t\tid: 0,\n\t\t\ttit: '리액트 연습',\n\t\t\tdone: true,\n\t\t\tnextCommentIdx: 2,\n\t\t\tcomment: [{ idx: 0, cont: '코멘트-1' }, { idx: 1, cont: '코멘트-2' }]\n\t\t},\n\t\t{\n\t\t\tid: 1,\n\t\t\ttit: '리액트 프로젝트',\n\t\t\tdone: false,\n\t\t\tnextCommentIdx: 2,\n\t\t\tcomment: [{ idx: 0, cont: '투두-1' }, { idx: 1, cont: '투두-2' }]\n\t\t}\n\t],\n\tsort: 'all'\n}\n\n//리듀서\nconst reducer = (state, action) => {\n\tconsole.log(state)\n\tswitch (action.type) {\n\t\tcase CREATE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttodos: state.todos.concat({\n\t\t\t\t\tid: action.nextId,\n\t\t\t\t\ttit: action.tit,\n\t\t\t\t\tdone: false,\n\t\t\t\t\tnextCommentIdx: 0,\n\t\t\t\t\tcomment: []\n\t\t\t\t})\n\t\t\t}\n\n\t\tcase REMOVE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttodos: state.todos.filter(todo => todo.id !== action.id)\n\t\t\t}\n\n\t\tcase FINISH:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttodos: state.todos.map(\n\t\t\t\t\ttodo =>\n\t\t\t\t\t\ttodo.id === action.id\n\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\t...todo,\n\t\t\t\t\t\t\t\t\tdone: !todo.done\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t: todo\n\t\t\t\t)\n\t\t\t}\n\n\t\tcase SORT:\n\t\t\tconsole.log(action.show)\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tsort: action.show\n\t\t\t}\n\n\t\tcase EDIT:\n\t\t\treturn null\n\n\t\tdefault:\n\t\t\tthrow new Error(`에러발생 - 해당하는 액션타입(${action.type})이 없습니다.`)\n\t}\n}\n\nexport default reducer\n","import React, { useReducer, useRef, createContext } from 'react'\nimport reducer, { initialState } from '../reducers/todos'\n\nconst CtxState = createContext(null)\nconst CtxDispatch = createContext(null)\nconst CtxNextId = createContext(null)\n\nexport const useCtxSate = () => {\n\tif (CtxState === null) return null\n\treturn CtxState\n}\n\nexport const useCtxDispatch = () => {\n\tif (CtxDispatch === null) return null\n\treturn CtxDispatch\n}\n\nexport const useCtxNextId = () => {\n\tif (CtxNextId === null) return null\n\treturn CtxNextId\n}\n\nfunction TodoCtxProvider({ children }) {\n\tconst [state, dispatch] = useReducer(reducer, initialState)\n\tconst nextId = useRef(2)\n\treturn (\n\t\t<CtxState.Provider value={state}>\n\t\t\t<CtxDispatch.Provider value={dispatch}>\n\t\t\t\t<CtxNextId.Provider value={nextId}>\n\t\t\t\t\t{children}\n\t\t\t\t</CtxNextId.Provider>\n\t\t\t</CtxDispatch.Provider>\n\t\t</CtxState.Provider>\n\t)\n}\n\nexport default TodoCtxProvider\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Header = styled.header`\n\tdisplay: flex;\n\tflex-direction: column;\n\tbackground-color: gold;\n`\nfunction TodoHead({ children }) {\n\treturn (\n\t\t<Header>\n\t\t\t{children}\n\t\t</Header>\n\t)\n}\n\nexport default React.memo(TodoHead)\n","import React, { useState, useEffect, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { useCtxSate } from '../contexts/TodoCtxProvider'\nimport { useContext } from 'react'\nimport { useMemo } from 'react'\n\nconst TodoDateBlock = styled.div`\n\tdisplay: flex;\n\theight: 70px;\n\tbackground-color: pink;\n`\n\nconst ToDate = styled.h1`\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\twidth: 100px;\n\tfont-size: 48px;\n`\n\nconst Today = styled.p`flex: 1;`\nconst Year = styled.span`\n\tdisplay: block;\n\tmargin-top: 16px;\n\tfont-size: 16px;\n`\nconst MonthTimeBlock = styled.span`\n\tdisplay: flex;\n\tmargin-top: 2px;\n`\nconst Month = styled.span`font-weight: 600;`\nconst Time = styled.time`\n\tdisplay: flex;\n\tjustify-content: space-between;\n\twidth: 80px;\n\tmargin-left: 20px;\n`\n\nconst Ampm = styled.span`display: block;`\n\nconst TodoLen = styled.h2`\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\twidth: 150px;\n\tfont-size: 30px;\n\ttext-align: right;\n`\n// 할일 개수 함수\nconst fnTodoLen = (todos, sort) => {\n\tif (sort === 'all') {\n\t\treturn todos.length\n\t} else if (sort === 'complete') {\n\t\treturn todos.filter(todo => todo.done).length\n\t} else if (sort === 'incomplete') {\n\t\treturn todos.filter(todo => !todo.done).length\n\t}\n}\n\nfunction TodoDate(props) {\n\tconst today = new Date()\n\tconst date = today.getDate()\n\tconst year = today.toLocaleDateString('ko-kr', { year: 'numeric' })\n\tconst month = today.toLocaleDateString('ko-kr', { month: 'long' })\n\n\tconst [ampm, setAmpm] = useState(today.getHours() >= 12 ? 'PM' : 'AM')\n\n\tconst fnZero = useCallback(sec => {\n\t\treturn ('00' + sec).substr(-2, 2)\n\t}, [])\n\n\tconst [time, setTime] = useState({\n\t\thour: fnZero(ampm === 'AM' ? today.getHours() : today.getHours() - 12),\n\t\tmin: fnZero(today.getMinutes()),\n\t\tsec: fnZero(today.getSeconds())\n\t})\n\n\tuseEffect(\n\t\t() => {\n\t\t\tsetTimeout(() => {\n\t\t\t\tconst now = new Date()\n\t\t\t\tnow.getHours() >= 12 ? setAmpm('PM') : setAmpm('AM')\n\n\t\t\t\tsetTime({\n\t\t\t\t\t...time,\n\t\t\t\t\thour: fnZero(ampm === 'AM' ? now.getHours() : now.getHours() - 12),\n\t\t\t\t\tmin: fnZero(now.getMinutes()),\n\t\t\t\t\tsec: fnZero(now.getSeconds())\n\t\t\t\t})\n\t\t\t}, 1000)\n\t\t},\n\t\t[fnZero, ampm, time]\n\t)\n\n\t// 할일 개수\n\tconst state = useContext(useCtxSate())\n\tlet todoLen = useMemo(() => fnTodoLen(state.todos, state.sort), [state])\n\n\treturn (\n\t\t<TodoDateBlock>\n\t\t\t<ToDate>\n\t\t\t\t{date}\n\t\t\t\t<span className=\"sr-only\">일 할일</span>\n\t\t\t</ToDate>\n\t\t\t<Today>\n\t\t\t\t<Year>\n\t\t\t\t\t{year}\n\t\t\t\t</Year>\n\t\t\t\t<MonthTimeBlock>\n\t\t\t\t\t<Month>\n\t\t\t\t\t\t{month}\n\t\t\t\t\t</Month>\n\t\t\t\t\t<Time>\n\t\t\t\t\t\t{time.hour}:{time.min}:{time.sec} <Ampm>{ampm}</Ampm>\n\t\t\t\t\t</Time>\n\t\t\t\t</MonthTimeBlock>\n\t\t\t</Today>\n\t\t\t<TodoLen>\n\t\t\t\t모두 {todoLen}개\n\t\t\t</TodoLen>\n\t\t</TodoDateBlock>\n\t)\n}\n\nexport default TodoDate\n","import { useState } from 'react'\n\nfunction useInputs(initialData) {\n\tconst [inputs, setInputs] = useState(initialData)\n\n\tconst fnChange = e => setInputs(e.target.value)\n\tconst fnReset = () => setInputs(initialData)\n\n\treturn { inputs, fnChange, fnReset }\n}\n\nexport default useInputs\n","import React, { useRef, useContext } from 'react'\nimport styled from 'styled-components'\nimport { MdAdd } from 'react-icons/md'\nimport useInputs from '../custom_hooks/useInputs'\nimport { create } from '../reducers/todos'\nimport { useCtxDispatch, useCtxNextId } from '../contexts/TodoCtxProvider'\n\nconst TodoInsertBlock = styled.form`\n\tposition: relative;\n\tpadding: 15px;\n\tdisplay: flex;\n`\n\nconst InputBox = styled.input`\n\tborder: none;\n\toutline: none;\n\tbackground: none;\n\tflex: 1;\n\theight: 30px;\n\tpadding: 0 15px;\n\tfont-size: 12px;\n\tbackground-color: #fff;\n\tborder-radius: 15px;\n\tbox-sizing: border-box;\n`\n\nconst BtnAdd = styled.button`\n\tborder: none;\n\toutline: none;\n\tbackground: none;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tposition: absolute;\n\tright: 18px;\n\ttop: 18px;\n\twidth: 24px;\n\theight: 24px;\n\tcolor: #fff;\n\tfont-size: 20px;\n\tbackground-color: gold;\n\tborder-radius: 50%;\n\tcursor: pointer;\n`\n\nfunction TodoInsert(props) {\n\tconst { inputs, fnChange, fnReset } = useInputs('')\n\tconst $input = useRef()\n\tconst dispatch = useContext(useCtxDispatch())\n\tconst nextId = useContext(useCtxNextId())\n\treturn (\n\t\t<TodoInsertBlock\n\t\t\tonSubmit={e => {\n\t\t\t\te.preventDefault()\n\t\t\t\tdispatch(create(inputs, nextId.current++))\n\t\t\t\tfnReset()\n\t\t\t\t$input.current.focus()\n\t\t\t}}\n\t\t>\n\t\t\t<InputBox ref={$input} value={inputs} onChange={fnChange} />\n\t\t\t<BtnAdd>\n\t\t\t\t<MdAdd />\n\t\t\t</BtnAdd>\n\t\t</TodoInsertBlock>\n\t)\n}\n\nexport default TodoInsert\n","import React from 'react'\nimport styled from 'styled-components'\nimport { MdAdd } from 'react-icons/md'\n\nconst TodoEditBlock = styled.form`\n\tposition: relative;\n\tpadding: 15px;\n\tdisplay: flex;\n`\n\nconst InputBox = styled.input`\n\tborder: none;\n\toutline: none;\n\tbackground: none;\n\tflex: 1;\n\theight: 30px;\n\tpadding: 0 15px;\n\tfont-size: 12px;\n\tbackground-color: #fff;\n\tborder-radius: 15px;\n\tbox-sizing: border-box;\n`\n\nconst BtnAdd = styled.button`\n\tborder: none;\n\toutline: none;\n\tbackground: none;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tposition: absolute;\n\tright: 18px;\n\ttop: 18px;\n\twidth: 24px;\n\theight: 24px;\n\tcolor: #fff;\n\tfont-size: 20px;\n\tbackground-color: pink;\n\tborder-radius: 50%;\n\tcursor: pointer;\n`\n\nfunction TodoEdit(props) {\n\treturn (\n\t\t<TodoEditBlock\n\t\t\tonSubmit={e => {\n\t\t\t\te.preventDefault()\n\t\t\t}}\n\t\t>\n\t\t\t<InputBox />\n\t\t\t<BtnAdd>\n\t\t\t\t<MdAdd />\n\t\t\t</BtnAdd>\n\t\t</TodoEditBlock>\n\t)\n}\n\nexport default TodoEdit\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst TodoBodyBlock = styled.section``\n\nfunction TodoBody({ children }) {\n\treturn (\n\t\t<TodoBodyBlock>\n\t\t\t{children}\n\t\t</TodoBodyBlock>\n\t)\n}\n\nexport default TodoBody\n","import React, { useContext } from 'react'\nimport styled, { css } from 'styled-components'\nimport { MdCheckBoxOutlineBlank, MdCheckBox, MdBuild, MdDelete } from 'react-icons/md'\nimport { finish, remove } from '../reducers/todos'\nimport { useCtxDispatch } from '../contexts/TodoCtxProvider'\n\nconst TodoItemBlock = styled.li`\n\tdisplay: flex;\n\theight: 70px;\n\talign-items: center;\n\tborder-bottom: 1px solid #555;\n`\nconst Span = styled.span`\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: stretch;\n\twidth: 50px;\n\tfont-size: 25px;\n\tcursor: pointer;\n\n\t&:hover {\n\t\tcolor: #345343;\n\t}\n`\nconst ChkBox = styled(Span)``\n\nconst Title = styled.h3`\n\tflex: 1;\n\toverflow: hidden;\n\twhite-space: nowrap;\n\ttext-overflow: ellipsis;\n`\nconst Edit = styled(Span)`width:40px;font-size:20px;`\nconst Delete = styled(Span)`width:40px;font-size:20px;`\n\nfunction TodoItem({ todo }) {\n\tconst { id, tit, done } = todo\n\n\tconst dispatch = useContext(useCtxDispatch())\n\n\treturn (\n\t\t<TodoItemBlock>\n\t\t\t<ChkBox onClick={() => dispatch(finish(id))}>\n\t\t\t\t{done ? <MdCheckBox /> : <MdCheckBoxOutlineBlank />}\n\t\t\t</ChkBox>\n\t\t\t<Title>\n\t\t\t\t{tit}\n\t\t\t</Title>\n\t\t\t<Edit>\n\t\t\t\t<MdBuild />\n\t\t\t</Edit>\n\t\t\t<Delete onClick={() => dispatch(remove(id))}>\n\t\t\t\t<MdDelete />\n\t\t\t</Delete>\n\t\t</TodoItemBlock>\n\t)\n}\n\nexport default TodoItem\n","import React, { useState, useContext } from 'react'\nimport styled, { css } from 'styled-components'\nimport TodoItem from './TodoItem'\nimport { useCtxSate } from '../contexts/TodoCtxProvider'\n\nconst TodoListBlock = styled.ul``\n\nfunction TodoList({ fnSelForm }) {\n\tconst { todos, sort } = useContext(useCtxSate())\n\n\treturn (\n\t\t<TodoListBlock>\n\t\t\t{todos.map(todo => <TodoItem key={todo.id} todo={todo} />)}\n\t\t</TodoListBlock>\n\t)\n}\n\nexport default TodoList\n","import React, { useContext } from 'react'\nimport styled, { css } from 'styled-components'\nimport { useState } from 'react'\nimport { useCtxDispatch } from '../contexts/TodoCtxProvider'\nimport { sort } from '../reducers/todos'\n\nconst TodoFooterBlock = styled.footer`\n\tdisplay: flex;\n\tjustify-content: space-around;\n\talign-items: center;\n\tpadding: 15px;\n`\n\nconst Button = styled.button`\n\tbackground: none;\n\toutline: none;\n\tborder: none;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tpadding: 5px 10px;\n\tfont-size: 14px;\n\tfont-weight: 600;\n\tborder: 1px solid #333;\n\tborder-radius: 15px;\n\tcursor: pointer;\n`\n\nconst BtnAll = styled(Button)`${props =>\n\tprops.show === 'all' &&\n\tcss`\n  background-color:gold;\n`}`\n\nconst BtnComplete = styled(Button)`${props =>\n\tprops.show === 'complete' &&\n\tcss`\n  background-color:gold;\n`}`\n\nconst BtnInComplete = styled(Button)`${props =>\n\tprops.show === 'incomplete' &&\n\tcss`\n  background-color:gold;\n`}`\n\nfunction TodoFooter(props) {\n\tconst [show, setShow] = useState('all')\n\tconst dispatch = useContext(useCtxDispatch())\n\n\treturn (\n\t\t<TodoFooterBlock>\n\t\t\t<BtnAll\n\t\t\t\tshow={show}\n\t\t\t\tonClick={() => {\n\t\t\t\t\tsetShow('all')\n\t\t\t\t\tdispatch(sort('all'))\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t전체보기\n\t\t\t</BtnAll>\n\t\t\t<BtnComplete\n\t\t\t\tshow={show}\n\t\t\t\tonClick={() => {\n\t\t\t\t\tsetShow('complete')\n\t\t\t\t\tdispatch(sort('complete'))\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t미션완료\n\t\t\t</BtnComplete>\n\t\t\t<BtnInComplete\n\t\t\t\tshow={show}\n\t\t\t\tonClick={() => {\n\t\t\t\t\tsetShow('incomplete')\n\t\t\t\t\tdispatch(sort('incomplete'))\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t아직미완\n\t\t\t</BtnInComplete>\n\t\t</TodoFooterBlock>\n\t)\n}\n\nexport default TodoFooter\n","import React from 'react'\nimport styled, { createGlobalStyle } from 'styled-components'\nimport TodoCtxProvider from '../contexts/TodoCtxProvider'\nimport TodoHead from '../components/TodoHead'\nimport TodoDate from '../components/TodoDate'\nimport TodoInsert from '../components/TodoInsert'\nimport TodoEdit from '../components/TodoEdit'\nimport TodoBody from '../components/TodoBody'\nimport TodoList from '../components/TodoList'\nimport TodoItem from '../components/TodoItem'\nimport { useState } from 'react'\nimport TodoFooter from '../components/TodoFooter'\n\nconst TodoContainerBlock = styled.div`\n\tposition: relative;\n\tmax-width: 640px;\n\tmargin: 0 auto;\n\tborder: 1px solid #333;\n\tborder-radius: 0 0 15px 15px;\n`\nconst CreateGlobalStyle = createGlobalStyle`\n    *{margin:0;padding:0;}\n    ul,ol,li{list-style:none;}\n    a:link,a:hover,a:visited,a:active{text-decoration:none;}\n    body{color:#333;font-size:14px;}\n    .sr-only{position:absolute;left:-9999px;}\n  `\n\nfunction TodoContainer(props) {\n\t//입력폼, 수정폼 선택변수\n\tconst [selectForm, setSelectForm] = useState(true)\n\tconst fnSelForm = () => {\n\t\tsetSelectForm(!selectForm)\n\t}\n\n\treturn (\n\t\t<TodoCtxProvider>\n\t\t\t<CreateGlobalStyle />\n\t\t\t<TodoContainerBlock>\n\t\t\t\t<TodoHead>\n\t\t\t\t\t<TodoDate />\n\t\t\t\t\t{selectForm ? <TodoInsert /> : <TodoEdit />}\n\t\t\t\t</TodoHead>\n\t\t\t\t<TodoBody>\n\t\t\t\t\t<TodoList fnSelForm={fnSelForm} />\n\t\t\t\t</TodoBody>\n\t\t\t\t<TodoFooter />\n\t\t\t</TodoContainerBlock>\n\t\t</TodoCtxProvider>\n\t)\n}\n\nexport default TodoContainer\n","import React from 'react'\nimport TodoContainer from './containers/TodoContainer'\n\nfunction App(props) {\n\treturn <TodoContainer />\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}