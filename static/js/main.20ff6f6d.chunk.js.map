{"version":3,"sources":["reducers/todos.js","contexts/TodoCtxProvider.jsx","components/TodoHead.jsx","components/TodoDate.jsx","custom_hooks/useInputs.js","components/TodoInsert.jsx","components/TodoEdit.jsx","components/TodoBody.jsx","components/TodoItem.jsx","components/TodoList.jsx","components/TodoFooter.jsx","containers/TodoContainer.jsx","App.js","serviceWorker.js","index.js"],"names":["sort","show","type","edit","id","name","value","initialState","todos","reducer","state","action","produce","draft","push","nextId","tit","done","filter","todo","console","log","find","Error","CtxState","createContext","CtxDispatch","CtxNextId","useCtxState","useCtxDispatch","TodoCtxProvider","children","useReducer","JSON","parse","localStorage","stringify","dispatch","useRef","useEffect","Provider","Header","styled","header","React","memo","TodoDateBlock","div","ToDate","h1","Today","YearMonth","p","Year","span","Month","MonthTimeBlock","Time","time","Dayname","TodoLen","h2","TodoDate","props","today","Date","date","getDate","year","toLocaleDateString","month","dayname","weekday","fnZero","useCallback","sec","substr","useState","hour","getHours","min","getMinutes","getSeconds","setTime","setTimeout","now","useContext","todoLen","useMemo","length","className","useInputs","initialData","text","setText","fnChange","e","target","fnReset","TodoInsertBlock","form","InputBox","input","BtnAdd","button","TodoInsert","$input","onSubmit","preventDefault","create","current","focus","ref","onChange","autoFocus","TodoEditBlock","TodoEdit","editId","fnChoice","TodoBodyBlock","section","TodoBody","TodoItemBlock","li","Span","ChkBox","Title","h3","Edit","Delete","TodoItem","fnEditId","onClick","remove","TodoListBlock","ul","TodoList","newTodos","map","key","TodoFooterBlock","footer","Button","BtnAll","css","BtnComplete","BtnInComplete","TodoFooter","sortVal","setShow","CreateGlobalStyle","createGlobalStyle","TodoContainerBlock","height","TodoContainer","choice","setChoice","bool","setEditId","setHeight","window","innerHeight","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.20ff6f6d.chunk.js","sourcesContent":["import produce from 'immer'\n\n//액션타입변수\nconst CREATE = 'todos/CREATE'\nconst REMOVE = 'todos/REMOVE'\nconst SORT = 'todos/SORT'\nconst EDIT = 'todos/EDIT'\n\n//액션생성함수\nexport const create = (nextId, tit) => ({ type: CREATE, nextId, tit })\nexport const remove = id => ({ type: REMOVE, id })\nexport const sort = show => ({ type: SORT, show })\nexport const edit = (id, name, value) => ({ type: EDIT, id, name, value })\n\n//초기값\nexport const initialState = {\n\ttodos: [\n\t\t// {\n\t\t// \tid: 1,\n\t\t// \ttit: '리액트 연습1',\n\t\t// \tdone: true\n\t\t// }\n\t],\n\tsort: 'all'\n}\n\n//리듀서\nconst reducer = (state, action) => {\n\tswitch (action.type) {\n\t\tcase CREATE:\n\t\t\treturn produce(state, draft => {\n\t\t\t\tdraft.todos.push({\n\t\t\t\t\tid: action.nextId,\n\t\t\t\t\ttit: action.tit,\n\t\t\t\t\tdone: false\n\t\t\t\t})\n\t\t\t})\n\n\t\tcase REMOVE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttodos: state.todos.filter(todo => todo.id !== action.id)\n\t\t\t}\n\n\t\tcase SORT:\n\t\t\tconsole.log(action.show)\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tsort: action.show\n\t\t\t}\n\n\t\tcase EDIT:\n\t\t\treturn produce(state, draft => {\n\t\t\t\tconst todo = draft.todos.find(todo => todo.id === action.id)\n\t\t\t\ttodo[action.name] = action.value\n\t\t\t})\n\n\t\tdefault:\n\t\t\tthrow new Error(`에러발생 - 해당하는 액션타입(${action.type})이 없습니다.`)\n\t}\n}\n\nexport default reducer\n","import React, { useReducer, useRef, createContext, useEffect } from 'react'\nimport reducer, { initialState } from '../reducers/todos'\n\nconst CtxState = createContext(null)\nconst CtxDispatch = createContext(null)\nconst CtxNextId = createContext(null)\n\nexport const useCtxState = () => {\n\tif (CtxState === null) return null\n\treturn CtxState\n}\n\nexport const useCtxDispatch = () => {\n\tif (CtxDispatch === null) return null\n\treturn CtxDispatch\n}\n\nexport const useCtxNextId = () => {\n\tif (CtxNextId === null) return null\n\treturn CtxNextId\n}\n\nexport const STORAGE_KEY = 'todo-store'\n\nfunction TodoCtxProvider({ children }) {\n\tconst [state, dispatch] = useReducer(\n\t\treducer,\n\t\tJSON.parse(localStorage[STORAGE_KEY] || JSON.stringify(initialState))\n\t)\n\tconst nextId = useRef(0)\n\n\tuseEffect(\n\t\t() => {\n\t\t\tlocalStorage[STORAGE_KEY] = JSON.stringify(state)\n\t\t},\n\t\t[state]\n\t)\n\n\treturn (\n\t\t<CtxState.Provider value={state}>\n\t\t\t<CtxDispatch.Provider value={dispatch}>\n\t\t\t\t<CtxNextId.Provider value={nextId}>\n\t\t\t\t\t{children}\n\t\t\t\t</CtxNextId.Provider>\n\t\t\t</CtxDispatch.Provider>\n\t\t</CtxState.Provider>\n\t)\n}\n\nexport default TodoCtxProvider\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Header = styled.header`\n\tdisplay: flex;\n\tflex-direction: column;\n\tbackground-color: gold;\n`\nfunction TodoHead({ children }) {\n\treturn (\n\t\t<Header>\n\t\t\t{children}\n\t\t</Header>\n\t)\n}\n\nexport default React.memo(TodoHead)\n","import React, { useState, useEffect, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { useCtxState } from '../contexts/TodoCtxProvider'\nimport { useContext } from 'react'\nimport { useMemo } from 'react'\n\nconst TodoDateBlock = styled.div`\n\tdisplay: flex;\n\theight: 70px;\n\tbackground-color: pink;\n`\n\nconst ToDate = styled.h1`\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\twidth: 100px;\n\tfont-size: 48px;\n`\n\nconst Today = styled.div`flex: 1;`\n\nconst YearMonth = styled.p`\n\tmargin-top: 16px;\n\tfont-size: 16px;\n`\nconst Year = styled.span`margin-right: 10px;`\nconst Month = styled.span``\n\nconst MonthTimeBlock = styled.span`\n\tdisplay: flex;\n\tmargin-top: 2px;\n`\nconst Time = styled.time`\n\tjustify-content: space-between;\n\twidth: 62px;\n`\n\nconst Dayname = styled.span``\n\nconst TodoLen = styled.h2`\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\twidth: 150px;\n\tfont-size: 30px;\n\ttext-align: right;\n`\n// 할일 개수 함수\nconst fnTodoLen = (todos, sort) => {\n\tif (sort === 'all') {\n\t\treturn todos.length\n\t} else if (sort === 'complete') {\n\t\treturn todos.filter(todo => todo.done).length\n\t} else if (sort === 'incomplete') {\n\t\treturn todos.filter(todo => !todo.done).length\n\t}\n}\n\nfunction TodoDate(props) {\n\tconst today = new Date()\n\tconst date = today.getDate()\n\tconst year = today.toLocaleDateString('ko-kr', { year: 'numeric' })\n\tconst month = today.toLocaleDateString('ko-kr', { month: 'long' })\n\tconst dayname = today.toLocaleDateString('ko-KR', { weekday: 'long' })\n\n\tconst fnZero = useCallback(sec => {\n\t\treturn ('00' + sec).substr(-2, 2)\n\t}, [])\n\n\tconst [time, setTime] = useState({\n\t\thour: fnZero(today.getHours() >= 13 && today.getHours() - 12),\n\t\tmin: fnZero(today.getMinutes()),\n\t\tsec: fnZero(today.getSeconds())\n\t})\n\n\tuseEffect(\n\t\t() => {\n\t\t\tsetTimeout(() => {\n\t\t\t\tconst now = new Date()\n\n\t\t\t\tsetTime({\n\t\t\t\t\t...time,\n\t\t\t\t\thour: fnZero(now.getHours() >= 13 && now.getHours() - 12),\n\t\t\t\t\tmin: fnZero(now.getMinutes()),\n\t\t\t\t\tsec: fnZero(now.getSeconds())\n\t\t\t\t})\n\t\t\t}, 1000)\n\t\t},\n\t\t[fnZero, time]\n\t)\n\n\t// 할일 개수\n\tconst state = useContext(useCtxState())\n\tlet todoLen = useMemo(() => fnTodoLen(state.todos, state.sort), [state])\n\n\treturn (\n\t\t<TodoDateBlock>\n\t\t\t<ToDate>\n\t\t\t\t{date}\n\t\t\t\t<span className=\"sr-only\">일 할일</span>\n\t\t\t</ToDate>\n\t\t\t<Today>\n\t\t\t\t<YearMonth>\n\t\t\t\t\t<Year>\n\t\t\t\t\t\t{year}\n\t\t\t\t\t</Year>\n\t\t\t\t\t<Month>\n\t\t\t\t\t\t{month}\n\t\t\t\t\t</Month>\n\t\t\t\t</YearMonth>\n\t\t\t\t<MonthTimeBlock>\n\t\t\t\t\t<Time>\n\t\t\t\t\t\t{time.hour}:{time.min}:{time.sec}\n\t\t\t\t\t</Time>\n\t\t\t\t\t<Dayname>\n\t\t\t\t\t\t{dayname}\n\t\t\t\t\t</Dayname>\n\t\t\t\t</MonthTimeBlock>\n\t\t\t</Today>\n\t\t\t<TodoLen>\n\t\t\t\t모두 {todoLen}개\n\t\t\t</TodoLen>\n\t\t</TodoDateBlock>\n\t)\n}\n\nexport default TodoDate\n","import { useState, useEffect } from 'react'\n\nfunction useInputs(initialData) {\n\tconst [text, setText] = useState('')\n\tconst fnChange = e => setText(e.target.value)\n\tconst fnReset = () => setText(initialData)\n\n\tuseEffect(\n\t\t() => {\n\t\t\t//setState가 실행되는 시점이 비동기이기 때문에 이 시점에 해 줘야 데이터가 확실하게 주입됨\n\t\t\tsetText(initialData)\n\t\t},\n\t\t[initialData]\n\t)\n\n\treturn { text, fnChange, fnReset }\n}\n\nexport default useInputs\n","import React, { useRef, useContext } from 'react'\nimport styled from 'styled-components'\nimport { MdAdd } from 'react-icons/md'\nimport useInputs from '../custom_hooks/useInputs'\nimport { create } from '../reducers/todos'\nimport { useCtxDispatch, useCtxNextId } from '../contexts/TodoCtxProvider'\n\nconst TodoInsertBlock = styled.form`\n\tposition: relative;\n\tpadding: 15px;\n\tdisplay: flex;\n`\n\nconst InputBox = styled.input`\n\tborder: none;\n\toutline: none;\n\tbackground: none;\n\tflex: 1;\n\theight: 30px;\n\tpadding: 0 15px;\n\tfont-size: 12px;\n\tbackground-color: #fff;\n\tborder-radius: 15px;\n\tbox-sizing: border-box;\n`\n\nconst BtnAdd = styled.button`\n\tborder: none;\n\toutline: none;\n\tbackground: none;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tposition: absolute;\n\tright: 18px;\n\ttop: 18px;\n\twidth: 24px;\n\theight: 24px;\n\tcolor: #fff;\n\tfont-size: 20px;\n\tbackground-color: gold;\n\tborder-radius: 50%;\n\tcursor: pointer;\n`\n\nfunction TodoInsert(props) {\n\tconst { text: tit, fnChange, fnReset } = useInputs('')\n\tconst $input = useRef()\n\tconst dispatch = useContext(useCtxDispatch())\n\tconst nextId = useContext(useCtxNextId())\n\treturn (\n\t\t<TodoInsertBlock\n\t\t\tonSubmit={e => {\n\t\t\t\te.preventDefault()\n\t\t\t\tif (tit) {\n\t\t\t\t\tdispatch(create(nextId.current++, tit))\n\t\t\t\t\tfnReset()\n\t\t\t\t\t$input.current.focus()\n\t\t\t\t}\n\t\t\t}}\n\t\t>\n\t\t\t<InputBox ref={$input} value={tit} onChange={fnChange} autoFocus />\n\t\t\t<BtnAdd>\n\t\t\t\t<MdAdd />\n\t\t\t</BtnAdd>\n\t\t</TodoInsertBlock>\n\t)\n}\n\nexport default TodoInsert\n","import React from 'react'\nimport styled from 'styled-components'\nimport { MdAdd } from 'react-icons/md'\nimport { useContext } from 'react'\nimport { useCtxState, useCtxDispatch } from '../contexts/TodoCtxProvider'\nimport useInputs from '../custom_hooks/useInputs'\nimport { edit } from '../reducers/todos'\n\nconst TodoEditBlock = styled.form`\n\tposition: relative;\n\tpadding: 15px;\n\tdisplay: flex;\n`\n\nconst InputBox = styled.input`\n\tborder: none;\n\toutline: none;\n\tbackground: none;\n\tflex: 1;\n\theight: 30px;\n\tpadding: 0 15px;\n\tfont-size: 12px;\n\tbackground-color: #fff;\n\tborder-radius: 15px;\n\tbox-sizing: border-box;\n`\n\nconst BtnAdd = styled.button`\n\tborder: none;\n\toutline: none;\n\tbackground: none;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tposition: absolute;\n\tright: 18px;\n\ttop: 18px;\n\twidth: 24px;\n\theight: 24px;\n\tcolor: #fff;\n\tfont-size: 20px;\n\tbackground-color: pink;\n\tborder-radius: 50%;\n\tcursor: pointer;\n`\n\nfunction TodoEdit({ editId, fnChoice }) {\n\tconst state = useContext(useCtxState())\n\tconst dispatch = useContext(useCtxDispatch())\n\tconst todo = state.todos.filter(todo => todo.id === editId)[0]\n\n\tconst { text: tit, fnChange, fnReset } = useInputs(todo.tit)\n\n\treturn (\n\t\t<TodoEditBlock\n\t\t\tonSubmit={e => {\n\t\t\t\te.preventDefault()\n\t\t\t\tdispatch(edit(editId, 'tit', tit))\n\t\t\t\tfnChoice(true)\n\t\t\t\tfnReset()\n\t\t\t}}\n\t\t>\n\t\t\t<InputBox value={tit} onChange={fnChange} autoFocus />\n\t\t\t<BtnAdd>\n\t\t\t\t<MdAdd />\n\t\t\t</BtnAdd>\n\t\t</TodoEditBlock>\n\t)\n}\n\nexport default TodoEdit\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst TodoBodyBlock = styled.section`height: 100%;`\n\nfunction TodoBody({ children }) {\n\treturn (\n\t\t<TodoBodyBlock>\n\t\t\t{children}\n\t\t</TodoBodyBlock>\n\t)\n}\n\nexport default TodoBody\n","import React, { useContext } from 'react'\nimport styled from 'styled-components'\nimport { MdCheckBoxOutlineBlank, MdCheckBox, MdBuild, MdDelete } from 'react-icons/md'\nimport { edit, remove } from '../reducers/todos'\nimport { useCtxDispatch } from '../contexts/TodoCtxProvider'\n\nconst TodoItemBlock = styled.li`\n\tdisplay: flex;\n\theight: 70px;\n\tpadding: 0 10px;\n\talign-items: center;\n\tborder-bottom: 1px solid #555;\n`\nconst Span = styled.span`\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: stretch;\n\twidth: 50px;\n\tfont-size: 25px;\n\tcursor: pointer;\n\n\t&:hover {\n\t\tcolor: #ff4562;\n\t}\n`\nconst ChkBox = styled(Span)``\n\nconst Title = styled.h3`\n\tflex: 1;\n\theight: 70px;\n\tline-height: 70px;\n\toverflow: hidden;\n\twhite-space: nowrap;\n\ttext-overflow: ellipsis;\n\t${props => props.done && `color:#dedede;text-decoration:line-through;`};\n`\nconst Edit = styled(Span)`width:40px;font-size:20px;`\nconst Delete = styled(Span)`width:40px;font-size:20px;`\n\nfunction TodoItem({ todo, fnChoice, fnEditId }) {\n\tconst { id, tit, done } = todo\n\n\tconst dispatch = useContext(useCtxDispatch())\n\n\treturn (\n\t\t<TodoItemBlock>\n\t\t\t<ChkBox onClick={() => dispatch(edit(id, 'done', !done))}>\n\t\t\t\t{done ? <MdCheckBox /> : <MdCheckBoxOutlineBlank />}\n\t\t\t</ChkBox>\n\t\t\t<Title done={done} onClick={() => dispatch(edit(id, 'done', !done))}>\n\t\t\t\t{tit}\n\t\t\t</Title>\n\t\t\t<Edit\n\t\t\t\tonClick={() => {\n\t\t\t\t\tfnChoice(false) //수정폼 노출\n\t\t\t\t\tfnEditId(id)\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<MdBuild />\n\t\t\t</Edit>\n\t\t\t<Delete\n\t\t\t\tonClick={() => {\n\t\t\t\t\tfnChoice(true) //입력폼 노출\n\t\t\t\t\tdispatch(remove(id))\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<MdDelete />\n\t\t\t</Delete>\n\t\t</TodoItemBlock>\n\t)\n}\n\nexport default TodoItem\n","import React, { useContext } from 'react'\nimport styled from 'styled-components'\nimport TodoItem from './TodoItem'\nimport { useCtxState } from '../contexts/TodoCtxProvider'\n\nconst TodoListBlock = styled.ul`\n\toverflow-y: scroll;\n\t/* position: absolute;\n\tright: -17px;\n\twidth: calc(100% + 17px); */\n\theight: calc(100% - 210px);\n`\n\nfunction TodoList({ fnChoice, fnEditId }) {\n\tconst { todos, sort } = useContext(useCtxState())\n\tlet newTodos = null\n\tswitch (sort) {\n\t\tcase 'all':\n\t\t\tnewTodos = todos\n\t\t\tbreak\n\t\tcase 'complete':\n\t\t\tnewTodos = todos.filter(todo => todo.done)\n\t\t\tbreak\n\t\tcase 'incomplete':\n\t\t\tnewTodos = todos.filter(todo => !todo.done)\n\t\t\tbreak\n\t\tdefault:\n\t\t\treturn todos\n\t}\n\treturn (\n\t\t<TodoListBlock>\n\t\t\t{newTodos.map(todo =>\n\t\t\t\t<TodoItem key={todo.id} todo={todo} fnChoice={fnChoice} fnEditId={fnEditId} />\n\t\t\t)}\n\t\t</TodoListBlock>\n\t)\n}\n\nexport default TodoList\n","import React, { useContext } from 'react'\nimport styled, { css } from 'styled-components'\nimport { useState } from 'react'\nimport { useCtxDispatch, useCtxState } from '../contexts/TodoCtxProvider'\nimport { sort } from '../reducers/todos'\n\nconst TodoFooterBlock = styled.footer`\n\tdisplay: flex;\n\tjustify-content: space-around;\n\talign-items: center;\n\tposition: absolute;\n\tleft: 0;\n\tbottom: 0;\n\twidth: 100%;\n\theight: 80px;\n\tbackground-color: #fff;\n\tborder-top: 1px solid #555;\n`\n\nconst Button = styled.button`\n\tbackground: none;\n\toutline: none;\n\tborder: none;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tpadding: 5px 10px;\n\tfont-size: 14px;\n\tfont-weight: 600;\n\tborder: 1px solid #333;\n\tborder-radius: 15px;\n\tcursor: pointer;\n`\n\nconst BtnAll = styled(Button)`${props =>\n\tprops.show === 'all' &&\n\tcss`\n  background-color:gold;\n`}`\n\nconst BtnComplete = styled(Button)`${props =>\n\tprops.show === 'complete' &&\n\tcss`\n  background-color:gold;\n`}`\n\nconst BtnInComplete = styled(Button)`${props =>\n\tprops.show === 'incomplete' &&\n\tcss`\n  background-color:gold;\n`}`\n\nfunction TodoFooter(props) {\n\tconst sortVal = useContext(useCtxState()).sort //정렬기준\n\tconst dispatch = useContext(useCtxDispatch())\n\tconst [show, setShow] = useState(sortVal)\n\n\treturn (\n\t\t<TodoFooterBlock>\n\t\t\t<BtnAll\n\t\t\t\tshow={show}\n\t\t\t\tonClick={() => {\n\t\t\t\t\tsetShow('all')\n\t\t\t\t\tdispatch(sort('all'))\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t전체보기\n\t\t\t</BtnAll>\n\t\t\t<BtnInComplete\n\t\t\t\tshow={show}\n\t\t\t\tonClick={() => {\n\t\t\t\t\tsetShow('incomplete')\n\t\t\t\t\tdispatch(sort('incomplete'))\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t해야할일\n\t\t\t</BtnInComplete>\n\t\t\t<BtnComplete\n\t\t\t\tshow={show}\n\t\t\t\tonClick={() => {\n\t\t\t\t\tsetShow('complete')\n\t\t\t\t\tdispatch(sort('complete'))\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t미션완료\n\t\t\t</BtnComplete>\n\t\t</TodoFooterBlock>\n\t)\n}\n\nexport default TodoFooter\n","import React, { useState } from 'react'\nimport styled, { createGlobalStyle, css } from 'styled-components'\nimport TodoCtxProvider from '../contexts/TodoCtxProvider'\nimport TodoHead from '../components/TodoHead'\nimport TodoDate from '../components/TodoDate'\nimport TodoInsert from '../components/TodoInsert'\nimport TodoEdit from '../components/TodoEdit'\nimport TodoBody from '../components/TodoBody'\nimport TodoList from '../components/TodoList'\nimport TodoFooter from '../components/TodoFooter'\nimport { useEffect } from 'react'\n\nconst CreateGlobalStyle = createGlobalStyle`\n    *{margin:0;padding:0;}\n    ul,ol,li{list-style:none;}\n    a:link,a:hover,a:visited,a:active{text-decoration:none;}\n    body{color:#333;font-size:14px;}\n    .sr-only{position:absolute;left:-9999px;}\n  `\n\nconst TodoContainerBlock = styled.div`\n\toverflow: hidden;\n\tposition: relative;\n\tmax-width: 640px;\n\tmargin: 0 auto;\n\tborder-radius: 0 0 15px 15px;\n\t${props =>\n\t\tprops.height &&\n\t\tcss`\n\t\theight:${props.height}px\n\t`};\n`\n\nfunction TodoContainer(props) {\n\t//입력폼(true), 수정폼(false) 선택변수\n\tconst [choice, setChoice] = useState(true)\n\tconst fnChoice = bool => {\n\t\tsetChoice(bool)\n\t}\n\n\t//수정할 항목 id 설정\n\tconst [editId, setEditId] = useState(null)\n\tconst fnEditId = id => setEditId(id)\n\n\tconst [height, setHeight] = useState()\n\n\tuseEffect(() => {\n\t\tsetHeight(window.innerHeight) //브라우저 화면의 높이\n\t}, [])\n\n\treturn (\n\t\t<TodoCtxProvider>\n\t\t\t<CreateGlobalStyle />\n\t\t\t<TodoContainerBlock height={height}>\n\t\t\t\t<TodoHead>\n\t\t\t\t\t<TodoDate />\n\t\t\t\t\t{choice ? <TodoInsert /> : <TodoEdit editId={editId} fnChoice={fnChoice} />}\n\t\t\t\t</TodoHead>\n\t\t\t\t<TodoBody>\n\t\t\t\t\t<TodoList fnChoice={fnChoice} fnEditId={fnEditId} />\n\t\t\t\t</TodoBody>\n\t\t\t\t<TodoFooter />\n\t\t\t</TodoContainerBlock>\n\t\t</TodoCtxProvider>\n\t)\n}\n\nexport default TodoContainer\n","import React from 'react'\nimport TodoContainer from './containers/TodoContainer'\n\nfunction App(props) {\n\treturn <TodoContainer />\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}