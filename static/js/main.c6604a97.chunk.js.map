{"version":3,"sources":["reducers/todos.js","contexts/TodoCtxProvider.jsx","components/TodoHead.jsx","components/TodoDate.jsx","custom_hooks/useInputs.js","components/TodoInsert.jsx","components/TodoEdit.jsx","components/TodoBody.jsx","components/TodoItem.jsx","components/TodoList.jsx","components/TodoFooter.jsx","containers/TodoContainer.jsx","App.js","serviceWorker.js","index.js"],"names":["create","useCallback","nextId","tit","type","remove","id","sort","show","edit","name","value","initialState","todos","reducer","state","action","produce","draft","push","done","filter","todo","console","log","find","Error","CtxState","createContext","CtxDispatch","CtxNextId","useCtxState","useCtxDispatch","useCtxNextId","React","memo","children","useReducer","JSON","parse","localStorage","stringify","dispatch","useRef","useEffect","Provider","Header","styled","header","TodoDateBlock","div","ToDate","h1","Today","YearMonth","p","Year","span","Month","MonthTimeBlock","Time","time","Dayname","TodoLen","h2","fnTodoLen","length","props","today","Date","date","getDate","year","toLocaleDateString","month","dayname","weekday","fnZero","sec","substr","useState","hour","getHours","min","getMinutes","getSeconds","setTime","setTimeout","now","useContext","todoLen","useMemo","className","useInputs","initialData","text","setText","fnChange","e","target","fnReset","TodoInsertBlock","form","InputBox","input","BtnAdd","button","$input","onSubmit","preventDefault","current","focus","ref","onChange","autoFocus","TodoEditBlock","editId","fnChoice","TodoBodyBlock","section","TodoItemBlock","li","Span","ChkBox","Title","h3","Edit","Delete","fnEditId","onClick","TodoListBlock","ul","newTodos","map","key","TodoFooterBlock","footer","Button","BtnAll","css","BtnComplete","BtnInComplete","sortVal","setShow","CreateGlobalStyle","createGlobalStyle","TodoContainerBlock","height","choice","setChoice","bool","setEditId","setHeight","window","innerHeight","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.c6604a97.chunk.js","sourcesContent":["import produce from 'immer'\nimport { useCallback } from 'react'\n\n//액션타입변수\nconst CREATE = 'todos/CREATE'\nconst REMOVE = 'todos/REMOVE'\nconst SORT = 'todos/SORT'\nconst EDIT = 'todos/EDIT'\n\n//액션생성함수\nexport const create = useCallback((nextId, tit) => ({ type: CREATE, nextId, tit }), [])\nexport const remove = useCallback(id => ({ type: REMOVE, id }), [])\nexport const sort = useCallback(show => ({ type: SORT, show }), [])\nexport const edit = useCallback((id, name, value) => ({ type: EDIT, id, name, value }), [])\n\n//초기값\nexport const initialState = {\n\ttodos: [\n\t\t// {\n\t\t// \tid: 1,\n\t\t// \ttit: '리액트 연습1',\n\t\t// \tdone: true\n\t\t// }\n\t],\n\tsort: 'all'\n}\n\n//리듀서\nconst reducer = (state, action) => {\n\tswitch (action.type) {\n\t\tcase CREATE:\n\t\t\treturn produce(state, draft => {\n\t\t\t\tdraft.todos.push({\n\t\t\t\t\tid: action.nextId,\n\t\t\t\t\ttit: action.tit,\n\t\t\t\t\tdone: false\n\t\t\t\t})\n\t\t\t})\n\n\t\tcase REMOVE:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\ttodos: state.todos.filter(todo => todo.id !== action.id)\n\t\t\t}\n\n\t\tcase SORT:\n\t\t\tconsole.log(action.show)\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tsort: action.show\n\t\t\t}\n\n\t\tcase EDIT:\n\t\t\treturn produce(state, draft => {\n\t\t\t\tconst todo = draft.todos.find(todo => todo.id === action.id)\n\t\t\t\ttodo[action.name] = action.value\n\t\t\t})\n\n\t\tdefault:\n\t\t\tthrow new Error(`에러발생 - 해당하는 액션타입(${action.type})이 없습니다.`)\n\t}\n}\n\nexport default reducer\n","import React, { useReducer, useRef, createContext, useEffect } from 'react'\nimport reducer, { initialState } from '../reducers/todos'\nimport { useCallback } from 'react'\n\nconst CtxState = createContext(null)\nconst CtxDispatch = createContext(null)\nconst CtxNextId = createContext(null)\n\nexport const useCtxState = useCallback(() => {\n\tif (CtxState === null) return null\n\treturn CtxState\n}, [])\n\nexport const useCtxDispatch = useCallback(() => {\n\tif (CtxDispatch === null) return null\n\treturn CtxDispatch\n}, [])\n\nexport const useCtxNextId = useCallback(() => {\n\tif (CtxNextId === null) return null\n\treturn CtxNextId\n}, [])\n\nexport const STORAGE_KEY = 'todo-store'\n\nfunction TodoCtxProvider({ children }) {\n\tconst [state, dispatch] = useReducer(\n\t\treducer,\n\t\tJSON.parse(localStorage[STORAGE_KEY] || JSON.stringify(initialState))\n\t)\n\tconst nextId = useRef(0)\n\n\tuseEffect(\n\t\t() => {\n\t\t\tlocalStorage[STORAGE_KEY] = JSON.stringify(state)\n\t\t},\n\t\t[state]\n\t)\n\n\treturn (\n\t\t<CtxState.Provider value={state}>\n\t\t\t<CtxDispatch.Provider value={dispatch}>\n\t\t\t\t<CtxNextId.Provider value={nextId}>\n\t\t\t\t\t{children}\n\t\t\t\t</CtxNextId.Provider>\n\t\t\t</CtxDispatch.Provider>\n\t\t</CtxState.Provider>\n\t)\n}\n\nexport default React.memo(TodoCtxProvider)\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Header = styled.header`\n\tdisplay: flex;\n\tflex-direction: column;\n\tbackground-color: gold;\n`\nfunction TodoHead({ children }) {\n\treturn (\n\t\t<Header>\n\t\t\t{children}\n\t\t</Header>\n\t)\n}\n\nexport default React.memo(TodoHead)\n","import React, { useState, useEffect, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { useCtxState } from '../contexts/TodoCtxProvider'\nimport { useContext } from 'react'\nimport { useMemo } from 'react'\n\nconst TodoDateBlock = styled.div`\n\tdisplay: flex;\n\theight: 70px;\n\tbackground-color: pink;\n`\n\nconst ToDate = styled.h1`\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\twidth: 100px;\n\tfont-size: 48px;\n`\n\nconst Today = styled.div`flex: 1;`\n\nconst YearMonth = styled.p`\n\tmargin-top: 16px;\n\tfont-size: 16px;\n`\nconst Year = styled.span`margin-right: 10px;`\nconst Month = styled.span``\n\nconst MonthTimeBlock = styled.span`\n\tdisplay: flex;\n\tmargin-top: 2px;\n`\nconst Time = styled.time`\n\tjustify-content: space-between;\n\twidth: 62px;\n`\n\nconst Dayname = styled.span``\n\nconst TodoLen = styled.h2`\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\twidth: 150px;\n\tfont-size: 30px;\n\ttext-align: right;\n`\n// 할일 개수 함수\nconst fnTodoLen = useCallback((todos, sort) => {\n\tif (sort === 'all') {\n\t\treturn todos.length\n\t} else if (sort === 'complete') {\n\t\treturn todos.filter(todo => todo.done).length\n\t} else if (sort === 'incomplete') {\n\t\treturn todos.filter(todo => !todo.done).length\n\t}\n}, [])\n\nfunction TodoDate(props) {\n\tconst today = new Date()\n\tconst date = today.getDate()\n\tconst year = today.toLocaleDateString('ko-kr', { year: 'numeric' })\n\tconst month = today.toLocaleDateString('ko-kr', { month: 'long' })\n\tconst dayname = today.toLocaleDateString('ko-KR', { weekday: 'long' })\n\n\tconst fnZero = useCallback(sec => {\n\t\treturn ('00' + sec).substr(-2, 2)\n\t}, [])\n\n\tconst [time, setTime] = useState({\n\t\thour: fnZero(today.getHours() >= 13 && today.getHours() - 12),\n\t\tmin: fnZero(today.getMinutes()),\n\t\tsec: fnZero(today.getSeconds())\n\t})\n\n\tuseEffect(\n\t\t() => {\n\t\t\tsetTimeout(() => {\n\t\t\t\tconst now = new Date()\n\n\t\t\t\tsetTime({\n\t\t\t\t\t...time,\n\t\t\t\t\thour: fnZero(now.getHours() >= 13 && now.getHours() - 12),\n\t\t\t\t\tmin: fnZero(now.getMinutes()),\n\t\t\t\t\tsec: fnZero(now.getSeconds())\n\t\t\t\t})\n\t\t\t}, 1000)\n\t\t},\n\t\t[fnZero, time]\n\t)\n\n\t// 할일 개수\n\tconst state = useContext(useCtxState())\n\tlet todoLen = useMemo(() => fnTodoLen(state.todos, state.sort), [state])\n\n\treturn (\n\t\t<TodoDateBlock>\n\t\t\t<ToDate>\n\t\t\t\t{date}\n\t\t\t\t<span className=\"sr-only\">일 할일</span>\n\t\t\t</ToDate>\n\t\t\t<Today>\n\t\t\t\t<YearMonth>\n\t\t\t\t\t<Year>\n\t\t\t\t\t\t{year}\n\t\t\t\t\t</Year>\n\t\t\t\t\t<Month>\n\t\t\t\t\t\t{month}\n\t\t\t\t\t</Month>\n\t\t\t\t</YearMonth>\n\t\t\t\t<MonthTimeBlock>\n\t\t\t\t\t<Time>\n\t\t\t\t\t\t{time.hour}:{time.min}:{time.sec}\n\t\t\t\t\t</Time>\n\t\t\t\t\t<Dayname>\n\t\t\t\t\t\t{dayname}\n\t\t\t\t\t</Dayname>\n\t\t\t\t</MonthTimeBlock>\n\t\t\t</Today>\n\t\t\t<TodoLen>\n\t\t\t\t모두 {todoLen}개\n\t\t\t</TodoLen>\n\t\t</TodoDateBlock>\n\t)\n}\n\nexport default React.memo(TodoDate)\n","import { useState, useEffect, useCallback } from 'react'\n\nfunction useInputs(initialData) {\n\tconst [text, setText] = useState('')\n\tconst fnChange = useCallback(e => setText(e.target.value), [])\n\tconst fnReset = useCallback(() => setText(initialData), [])\n\n\tuseEffect(\n\t\t() => {\n\t\t\t//setState가 실행되는 시점이 비동기이기 때문에 이 시점에 해 줘야 데이터가 확실하게 주입됨\n\t\t\tsetText(initialData)\n\t\t},\n\t\t[initialData]\n\t)\n\n\treturn { text, fnChange, fnReset }\n}\n\nexport default useInputs\n","import React, { useRef, useContext } from 'react'\nimport styled from 'styled-components'\nimport { MdAdd } from 'react-icons/md'\nimport useInputs from '../custom_hooks/useInputs'\nimport { create } from '../reducers/todos'\nimport { useCtxDispatch, useCtxNextId } from '../contexts/TodoCtxProvider'\n\nconst TodoInsertBlock = styled.form`\n\tposition: relative;\n\tpadding: 15px;\n\tdisplay: flex;\n`\n\nconst InputBox = styled.input`\n\tborder: none;\n\toutline: none;\n\tbackground: none;\n\tflex: 1;\n\theight: 30px;\n\tpadding: 0 15px;\n\tfont-size: 12px;\n\tbackground-color: #fff;\n\tborder-radius: 15px;\n\tbox-sizing: border-box;\n`\n\nconst BtnAdd = styled.button`\n\tborder: none;\n\toutline: none;\n\tbackground: none;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tposition: absolute;\n\tright: 18px;\n\ttop: 18px;\n\twidth: 24px;\n\theight: 24px;\n\tcolor: #fff;\n\tfont-size: 20px;\n\tbackground-color: gold;\n\tborder-radius: 50%;\n\tcursor: pointer;\n`\n\nfunction TodoInsert(props) {\n\tconst { text: tit, fnChange, fnReset } = useInputs('')\n\tconst $input = useRef()\n\tconst dispatch = useContext(useCtxDispatch())\n\tconst nextId = useContext(useCtxNextId())\n\treturn (\n\t\t<TodoInsertBlock\n\t\t\tonSubmit={e => {\n\t\t\t\te.preventDefault()\n\t\t\t\tif (tit) {\n\t\t\t\t\tdispatch(create(nextId.current++, tit))\n\t\t\t\t\tfnReset()\n\t\t\t\t\t$input.current.focus()\n\t\t\t\t}\n\t\t\t}}\n\t\t>\n\t\t\t<InputBox ref={$input} value={tit} onChange={fnChange} autoFocus />\n\t\t\t<BtnAdd>\n\t\t\t\t<MdAdd />\n\t\t\t</BtnAdd>\n\t\t</TodoInsertBlock>\n\t)\n}\n\nexport default React.memo(TodoInsert)\n","import React from 'react'\nimport styled from 'styled-components'\nimport { MdAdd } from 'react-icons/md'\nimport { useContext } from 'react'\nimport { useCtxState, useCtxDispatch } from '../contexts/TodoCtxProvider'\nimport useInputs from '../custom_hooks/useInputs'\nimport { edit } from '../reducers/todos'\n\nconst TodoEditBlock = styled.form`\n\tposition: relative;\n\tpadding: 15px;\n\tdisplay: flex;\n`\n\nconst InputBox = styled.input`\n\tborder: none;\n\toutline: none;\n\tbackground: none;\n\tflex: 1;\n\theight: 30px;\n\tpadding: 0 15px;\n\tfont-size: 12px;\n\tbackground-color: #fff;\n\tborder-radius: 15px;\n\tbox-sizing: border-box;\n`\n\nconst BtnAdd = styled.button`\n\tborder: none;\n\toutline: none;\n\tbackground: none;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tposition: absolute;\n\tright: 18px;\n\ttop: 18px;\n\twidth: 24px;\n\theight: 24px;\n\tcolor: #fff;\n\tfont-size: 20px;\n\tbackground-color: pink;\n\tborder-radius: 50%;\n\tcursor: pointer;\n`\n\nfunction TodoEdit({ editId, fnChoice }) {\n\tconst state = useContext(useCtxState())\n\tconst dispatch = useContext(useCtxDispatch())\n\tconst todo = state.todos.filter(todo => todo.id === editId)[0]\n\n\tconst { text: tit, fnChange, fnReset } = useInputs(todo.tit)\n\n\treturn (\n\t\t<TodoEditBlock\n\t\t\tonSubmit={e => {\n\t\t\t\te.preventDefault()\n\t\t\t\tdispatch(edit(editId, 'tit', tit))\n\t\t\t\tfnChoice(true)\n\t\t\t\tfnReset()\n\t\t\t}}\n\t\t>\n\t\t\t<InputBox value={tit} onChange={fnChange} autoFocus />\n\t\t\t<BtnAdd>\n\t\t\t\t<MdAdd />\n\t\t\t</BtnAdd>\n\t\t</TodoEditBlock>\n\t)\n}\n\nexport default React.memo(TodoEdit)\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst TodoBodyBlock = styled.section`height: 100%;`\n\nfunction TodoBody({ children }) {\n\treturn (\n\t\t<TodoBodyBlock>\n\t\t\t{children}\n\t\t</TodoBodyBlock>\n\t)\n}\n\nexport default React.memo(TodoBody)\n","import React, { useContext } from 'react'\nimport styled from 'styled-components'\nimport { MdCheckBoxOutlineBlank, MdCheckBox, MdBuild, MdDelete } from 'react-icons/md'\nimport { edit, remove } from '../reducers/todos'\nimport { useCtxDispatch } from '../contexts/TodoCtxProvider'\n\nconst TodoItemBlock = styled.li`\n\tdisplay: flex;\n\theight: 70px;\n\tpadding: 0 10px;\n\talign-items: center;\n\tborder-bottom: 1px solid #555;\n`\nconst Span = styled.span`\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: stretch;\n\twidth: 50px;\n\tfont-size: 25px;\n\tcursor: pointer;\n\n\t&:hover {\n\t\tcolor: #ff4562;\n\t}\n`\nconst ChkBox = styled(Span)``\n\nconst Title = styled.h3`\n\tflex: 1;\n\theight: 70px;\n\tline-height: 70px;\n\toverflow: hidden;\n\twhite-space: nowrap;\n\ttext-overflow: ellipsis;\n\t${props => props.done && `color:#dedede;text-decoration:line-through;`};\n`\nconst Edit = styled(Span)`width:40px;font-size:20px;`\nconst Delete = styled(Span)`width:40px;font-size:20px;`\n\nfunction TodoItem({ todo, fnChoice, fnEditId }) {\n\tconst { id, tit, done } = todo\n\n\tconst dispatch = useContext(useCtxDispatch())\n\n\treturn (\n\t\t<TodoItemBlock>\n\t\t\t<ChkBox onClick={() => dispatch(edit(id, 'done', !done))}>\n\t\t\t\t{done ? <MdCheckBox /> : <MdCheckBoxOutlineBlank />}\n\t\t\t</ChkBox>\n\t\t\t<Title done={done} onClick={() => dispatch(edit(id, 'done', !done))}>\n\t\t\t\t{tit}\n\t\t\t</Title>\n\t\t\t<Edit\n\t\t\t\tonClick={() => {\n\t\t\t\t\tfnChoice(false) //수정폼 노출\n\t\t\t\t\tfnEditId(id)\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<MdBuild />\n\t\t\t</Edit>\n\t\t\t<Delete\n\t\t\t\tonClick={() => {\n\t\t\t\t\tfnChoice(true) //입력폼 노출\n\t\t\t\t\tdispatch(remove(id))\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<MdDelete />\n\t\t\t</Delete>\n\t\t</TodoItemBlock>\n\t)\n}\n\nexport default React.memo(TodoItem)\n","import React, { useContext } from 'react'\nimport styled from 'styled-components'\nimport TodoItem from './TodoItem'\nimport { useCtxState } from '../contexts/TodoCtxProvider'\n\nconst TodoListBlock = styled.ul`\n\toverflow-y: scroll;\n\theight: calc(100% - 210px);\n`\n\nfunction TodoList({ fnChoice, fnEditId }) {\n\tconst { todos, sort } = useContext(useCtxState())\n\tlet newTodos = null\n\tswitch (sort) {\n\t\tcase 'all':\n\t\t\tnewTodos = todos\n\t\t\tbreak\n\t\tcase 'complete':\n\t\t\tnewTodos = todos.filter(todo => todo.done)\n\t\t\tbreak\n\t\tcase 'incomplete':\n\t\t\tnewTodos = todos.filter(todo => !todo.done)\n\t\t\tbreak\n\t\tdefault:\n\t\t\treturn todos\n\t}\n\treturn (\n\t\t<TodoListBlock>\n\t\t\t{newTodos.map(todo =>\n\t\t\t\t<TodoItem key={todo.id} todo={todo} fnChoice={fnChoice} fnEditId={fnEditId} />\n\t\t\t)}\n\t\t</TodoListBlock>\n\t)\n}\n\nexport default React.memo(TodoList)\n","import React, { useContext } from 'react'\nimport styled, { css } from 'styled-components'\nimport { useState } from 'react'\nimport { useCtxDispatch, useCtxState } from '../contexts/TodoCtxProvider'\nimport { sort } from '../reducers/todos'\n\nconst TodoFooterBlock = styled.footer`\n\tdisplay: flex;\n\tjustify-content: space-around;\n\talign-items: center;\n\tposition: absolute;\n\tleft: 0;\n\tbottom: 0;\n\twidth: 100%;\n\theight: 80px;\n\tbackground-color: #fff;\n\tborder-top: 1px solid #555;\n`\n\nconst Button = styled.button`\n\tbackground: none;\n\toutline: none;\n\tborder: none;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tpadding: 5px 10px;\n\tfont-size: 14px;\n\tfont-weight: 600;\n\tborder: 1px solid #333;\n\tborder-radius: 15px;\n\tcursor: pointer;\n`\n\nconst BtnAll = styled(Button)`${props =>\n\tprops.show === 'all' &&\n\tcss`\n  background-color:gold;\n`}`\n\nconst BtnComplete = styled(Button)`${props =>\n\tprops.show === 'complete' &&\n\tcss`\n  background-color:gold;\n`}`\n\nconst BtnInComplete = styled(Button)`${props =>\n\tprops.show === 'incomplete' &&\n\tcss`\n  background-color:gold;\n`}`\n\nfunction TodoFooter(props) {\n\tconst sortVal = useContext(useCtxState()).sort //정렬기준\n\tconst dispatch = useContext(useCtxDispatch())\n\tconst [show, setShow] = useState(sortVal)\n\n\treturn (\n\t\t<TodoFooterBlock>\n\t\t\t<BtnAll\n\t\t\t\tshow={show}\n\t\t\t\tonClick={() => {\n\t\t\t\t\tsetShow('all')\n\t\t\t\t\tdispatch(sort('all'))\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t전체보기\n\t\t\t</BtnAll>\n\t\t\t<BtnInComplete\n\t\t\t\tshow={show}\n\t\t\t\tonClick={() => {\n\t\t\t\t\tsetShow('incomplete')\n\t\t\t\t\tdispatch(sort('incomplete'))\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t해야할일\n\t\t\t</BtnInComplete>\n\t\t\t<BtnComplete\n\t\t\t\tshow={show}\n\t\t\t\tonClick={() => {\n\t\t\t\t\tsetShow('complete')\n\t\t\t\t\tdispatch(sort('complete'))\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t미션완료\n\t\t\t</BtnComplete>\n\t\t</TodoFooterBlock>\n\t)\n}\n\nexport default React.memo(TodoFooter)\n","import React, { useState, useCallback } from 'react'\nimport styled, { createGlobalStyle, css } from 'styled-components'\nimport TodoCtxProvider from '../contexts/TodoCtxProvider'\nimport TodoHead from '../components/TodoHead'\nimport TodoDate from '../components/TodoDate'\nimport TodoInsert from '../components/TodoInsert'\nimport TodoEdit from '../components/TodoEdit'\nimport TodoBody from '../components/TodoBody'\nimport TodoList from '../components/TodoList'\nimport TodoFooter from '../components/TodoFooter'\nimport { useEffect } from 'react'\n\nconst CreateGlobalStyle = createGlobalStyle`\n    *{margin:0;padding:0;}\n    ul,ol,li{list-style:none;}\n    a:link,a:hover,a:visited,a:active{text-decoration:none;}\n    body{color:#333;font-size:14px;}\n    .sr-only{position:absolute;left:-9999px;}\n  `\n\nconst TodoContainerBlock = styled.div`\n\toverflow: hidden;\n\tposition: relative;\n\tmax-width: 640px;\n\tmargin: 0 auto;\n\tborder-radius: 0 0 15px 15px;\n\t${props =>\n\t\tprops.height &&\n\t\tcss`\n\t\theight:${props.height}px\n\t`};\n`\n\nfunction TodoContainer(props) {\n\t//입력폼(true), 수정폼(false) 선택변수\n\tconst [choice, setChoice] = useState(true)\n\tconst fnChoice = useCallback(bool => {\n\t\tsetChoice(bool)\n\t}, [])\n\n\t//수정할 항목 id 설정\n\tconst [editId, setEditId] = useState(null)\n\tconst fnEditId = useCallback(id => setEditId(id), [])\n\n\tconst [height, setHeight] = useState()\n\n\tuseEffect(() => {\n\t\tsetHeight(window.innerHeight) //브라우저 화면의 높이\n\t}, [])\n\n\treturn (\n\t\t<TodoCtxProvider>\n\t\t\t<CreateGlobalStyle />\n\t\t\t<TodoContainerBlock height={height}>\n\t\t\t\t<TodoHead>\n\t\t\t\t\t<TodoDate />\n\t\t\t\t\t{choice ? <TodoInsert /> : <TodoEdit editId={editId} fnChoice={fnChoice} />}\n\t\t\t\t</TodoHead>\n\t\t\t\t<TodoBody>\n\t\t\t\t\t<TodoList fnChoice={fnChoice} fnEditId={fnEditId} />\n\t\t\t\t</TodoBody>\n\t\t\t\t<TodoFooter />\n\t\t\t</TodoContainerBlock>\n\t\t</TodoCtxProvider>\n\t)\n}\n\nexport default React.memo(TodoContainer)\n","import React from 'react'\nimport TodoContainer from './containers/TodoContainer'\n\nfunction App(props) {\n\treturn <TodoContainer />\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}